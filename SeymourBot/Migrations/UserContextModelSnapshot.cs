// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeymourBot.Storage.User;

namespace SeymourBot.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SeymourBot.Storage.User.Tables.BlacklistUserStorage", b =>
                {
                    b.Property<ulong>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateInserted");

                    b.Property<DateTime>("DateToRemove");

                    b.Property<ulong>("ModeratorID");

                    b.Property<string>("Username");

                    b.HasKey("UserID");

                    b.ToTable("BlackListedTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.User.Tables.GuildRoleStorage", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.Property<ulong?>("UserRoleStorageUserID");

                    b.HasKey("RoleID");

                    b.HasIndex("UserRoleStorageUserID");

                    b.ToTable("GuildRoleStorage");
                });

            modelBuilder.Entity("SeymourBot.Storage.User.UserDisciplinaryPermanentStorage", b =>
                {
                    b.Property<ulong>("DisciplineEventID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateInserted");

                    b.Property<int>("DiscipinaryEventType");

                    b.Property<ulong>("ModeratorID");

                    b.Property<string>("Reason");

                    b.Property<ulong>("UserID");

                    b.HasKey("DisciplineEventID");

                    b.ToTable("UserDisciplinaryPermanentStorageTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.UserDisciplinaryEventArchive", b =>
                {
                    b.Property<ulong>("ArchiveID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateArchived");

                    b.Property<DateTime>("DateInserted");

                    b.Property<DateTime>("DateToRemove");

                    b.Property<ulong>("DisciplineEventID");

                    b.Property<int>("DisciplineType");

                    b.Property<ulong>("ModeratorID");

                    b.Property<string>("Reason");

                    b.Property<ulong>("UserID");

                    b.HasKey("ArchiveID");

                    b.ToTable("UserDisciplinaryEventArchiveTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.UserDisciplinaryEventStorage", b =>
                {
                    b.Property<ulong>("DisciplineEventID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateInserted");

                    b.Property<DateTime>("DateToRemove");

                    b.Property<int>("DiscipinaryEventType");

                    b.Property<ulong>("ModeratorID");

                    b.Property<string>("Reason");

                    b.Property<ulong>("UserID");

                    b.HasKey("DisciplineEventID");

                    b.ToTable("UserDisciplinaryEventStorageTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.UserRoleStorage", b =>
                {
                    b.Property<ulong>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateUpdated");

                    b.HasKey("UserID");

                    b.ToTable("UserRoleStorageTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.UserStorage", b =>
                {
                    b.Property<ulong>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("UserStorageTable");
                });

            modelBuilder.Entity("SeymourBot.Storage.User.Tables.GuildRoleStorage", b =>
                {
                    b.HasOne("SeymourBot.Storage.UserRoleStorage")
                        .WithMany("RoleIDTable")
                        .HasForeignKey("UserRoleStorageUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
